// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Edge, Face3, Geometry, Pyramid, Vec3;

  Vec3 = require('pex/geom/Vec3');
  Face3 = require('pex/geom/Face3');
  Edge = require('pex/geom/Edge');
  Geometry = require('pex/geom/Geometry');
  return Pyramid = (function(_super) {
    __extends(Pyramid, _super);

    function Pyramid(baseSizeX, baseSizeZ, height) {
      var edges, faces, vertices;

      if (baseSizeX == null) {
        baseSizeX = 1;
      }
      if (baseSizeZ == null) {
        baseSizeZ = 1;
      }
      if (height == null) {
        height = 1;
      }
      vertices = [new Vec3(-baseSizeX / 2, 0, -baseSizeZ / 2), new Vec3(-baseSizeX / 2, 0, baseSizeZ / 2), new Vec3(baseSizeX / 2, 0, baseSizeZ / 2), new Vec3(baseSizeX / 2, 0, -baseSizeZ / 2), new Vec3(0, height, 0)];
      faces = [new Face3(0, 2, 1), new Face3(3, 2, 0), new Face3(0, 1, 4), new Face3(1, 2, 4), new Face3(2, 3, 4), new Face3(3, 0, 4)];
      edges = [new Edge(0, 1), new Edge(1, 2), new Edge(2, 3), new Edge(3, 0), new Edge(0, 4), new Edge(1, 4), new Edge(2, 4), new Edge(3, 4)];
      Pyramid.__super__.constructor.call(this, {
        vertices: vertices,
        faces: faces,
        edges: edges
      });
    }

    return Pyramid;

  })(Geometry);
});
